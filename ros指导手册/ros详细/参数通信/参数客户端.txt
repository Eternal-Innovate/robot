from rcl_interfaces.srv import SetParameters

from rcl_interfaces.msg import Parameter, ParameterValue, ParameterType

 def call_set_parameters(self, parameters):
        """
        调用服务， 修改参数
        """
        # 1.判断服务端是否在线                                                       #根据目标param所在
        update_param_client = self.create_client(SetParameters, '/face_detect_node/set_parameters')
        while self.client.wait_for_service(timeout_sec=1.0) is False:
            self.get_logger().info('等待服务器上线!')
        # 2.创建request
        request = SetParameters.Request()
        request.parameters = parameters
        self.get_logger().info(f'Sending parameters: {[param.name for param in parameters]}')
        # 3.调用服务端更新参数
        future = update_param_client.call_async(request)
        rclpy.spin_until_future_complete(self, future) #等待服务端响应
        response = future.result()
        return response
    
    def update_detect_model(self, model='hog'):
        # 根据传入的model， 构造parameters， 然后调用 call——set——parameters更新服务器的参数
        param = Parameter()
        param.name = 'model'   # (根据param 对应的数据类型)
        param_value = ParameterValue()
        param_value.string_value = model
        param_value.type = ParameterType.PARAMETER_STRING
        param.value = param_value
        # 3. 请求更新参数
        response = self.call_set_parameters([param])
        for result in response.results:
            self.get_logger().info(f'设置参数结果:{result.successful}{result.reason}')

